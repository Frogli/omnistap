Do llList.$cols.$add("ID",kInteger,k32bitint)
Do llList.$cols.$add("Description",kCharacter,kSimplechar,100000000)

Do llList.$add(1,"foo")
Do llList.$add(2,"bar")
Do llList.$add(3,"1")
Do llList.$add(4,"baz")

Do llList.$setRecallColumn("ID")

Calculate llList.$line as 1
Do llList.$storeLine()
Calculate llList.$line as 2
Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,1,"We can recall on ID")

Calculate llList.$line as 4
Do llList.$storeLine()

Do llList.$remove(4)
Calculate llList.$line as 2

Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,1,"When the column value isn't found, we reset to line 1")

Do llList.$setDefaultLine(1)
Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,1,"When the column value isn't found, we reset to line 1 (the default)")

Do llList.$setRecallColumn("Description")
Calculate llList.$line as 2
Do llList.$storeLine()

Calculate llList.$line as 1
Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,2,"We can recall the description column")

Do llList.$setRecallColumn()

Calculate llList.$line as 1
Do llList.$setDefaultLine(0)

Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,0,"When we reset the recall column, we lose the stored line")

Calculate llList.$line as 3
Do llList.$storeLine()

Calculate llList.$line as 1
Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,0,"When we set the recall column to nothing, recalling sets us to 0")

Do llList.$clear()

Do llList.$setDefaultLine(1)
Do llList.$recallLine()

Do ioTAP.$is_number(llList.$line,0,"When the column value isn't found, and the defautlt exceeds the linecount, we set the line to the list linecount")