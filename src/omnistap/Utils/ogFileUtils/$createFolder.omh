Calculate pcFolder as trim(pcFolder,kFalse,kTrue,sys(9))

If FileOps.$doesfileexist(pcFolder)
	Quit method kTrue
End If

Do $cinst.$splitDriveFromPath(pcFolder,lcDrive,lcPath)
Calculate lcPath as trim(lcPath,kTrue,kFalse,sys(9))

Do uoLog.$debug(con("Will create folder ",lcPath," on drive ",lcDrive))

Do llFolders.$cols.$add("Folder",kCharacter,kSimplechar,10000000)

While len(lcPath)
	Do strtok('lcPath',sys(9)) Returns lcFolder
	Do llFolders.$add(lcFolder)
End While

Calculate lcPath as lcDrive

For llFolders.$line from 1 to llFolders.$linecount step 1
	Calculate lcPath as con(lcPath,sys(9),llFolders.Folder)
	
	If FileOps.$doesfileexist(lcPath)=kTrue
		Do uoLog.$debug(con("   Don't create ",lcPath," because it exists."))
		Jump to start of loop
	End If
	
	Do FileOps.$createdir(lcPath) Returns lnResult
	
	If lnResult=0
		Do uoLog.$debug(con("   Successfully created ",lcPath," using FileOps."))
		Jump to start of loop
	End If
	
	If lnResult=kFileOpsPermissionDenied
		Do uoLog.$warning(con("   Permission denied trying to create ",lcPath," using FileOps. Will attempt shell command to create ",pcFolder))
		
		If tvMacVersion=kTrue
			Calculate lcMkdir as con("mkdir -p ",pcFolder)
		Else
			Calculate lcMkdir as con('MD "',pcFolder,'"')
		End If
		
		Do uoShell.$run(lcMkdir,lcResults,pbAsRoot) Returns lnExitCode
		
		If lnExitCode<>0
			Do uoLog.$error(con("   Error ",lnExitCode," when attempting to create ",pcFolder," using uoShell with ",pick(pbAsRoot,"standard","elevated")," privileges. Results: lcResults"))
		Else
			Do uoLog.$notice(con("   Successfully created ",pcFolder," using uoShell."))
		End If
	Else
		Do uoLog.$error(con("   Error ",lnResult," when attempting to create ",lcPath))
		Quit method kFalse
	End If
End For

Do FileOps.$doesfileexist(pcFolder) Returns lbOK

If lbOK=kTrue
	Do uoLog.$debug(con("Created ",pcFolder," successfully."))
Else
	Do uoLog.$error(con("Failed to create ",pcFolder))
End If

Quit method lbOK