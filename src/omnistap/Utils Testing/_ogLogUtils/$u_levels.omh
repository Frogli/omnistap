Do loLog.$error("Sample error")
Calculate ldTimeStamp as #D

Calculate lcMethodLine as con($cmethod().$fullname," line 1")
Calculate lcMethodLine as replaceall(lcMethodLine,"//","")

Do llLogToCompare.$copydefinition(loLog.ilLog)
Do llLogToCompare.$add()
Calculate llLogToCompare.$line as 1
Calculate llLogToCompare.ID as 1
Calculate llLogToCompare.Level as "Error"
Calculate llLogToCompare.Method as $cmethod()
Calculate llLogToCompare.MethodLine as 1
Calculate llLogToCompare.Location as lcMethodLine
Calculate llLogToCompare.Message as "Sample error"
Calculate llLogToCompare.Color as kRed
Calculate llLogToCompare.IconID as 1681
Calculate llLogToCompare.ShellColor as loCLI.$kRed()

Do loLog.$getLog() Returns llLog

Calculate lnDiff as abs(ddiff(kSecond,llLog.1.TimeStamp,ldTimeStamp))
Do ioTAP.$is_boolean(lnDiff<150,kTrue,"Time Stamp is ok")

Calculate llLog.1.TimeStamp as #NULL

Do ioTAP.$is_list(llLog,llLogToCompare,"We build the log correctly")

Do loLog.$_getColor("Warning") Returns lnColor
Calculate lnExpectedColor as rgb(249,118,27)
Do ioTAP.$is_number(lnColor,lnExpectedColor,"We have the right color for warning")

Do loLog.$_getIconID("Warning") Returns lnIconID
Calculate lnExpectedIconID as 1682
Do ioTAP.$is_number(lnIconID,lnExpectedIconID,"We have the right icon ID for warning")

Do loLog.$_getColor("Debug") Returns lnColor
Calculate lnExpectedColor as kDarkBlue
Do ioTAP.$is_number(lnColor,lnExpectedColor,"We have the right color for debug")

Do loLog.$_getIconID("Debug") Returns lnIconID
Calculate lnExpectedIconID as 2024
Do ioTAP.$is_number(lnIconID,lnExpectedIconID,"We have the right icon ID for debug")

Do loLog.$_getColor("Notice") Returns lnColor
Calculate lnExpectedColor as kColorWindowText
Do ioTAP.$is_number(lnColor,lnExpectedColor,"We have the right color for notice")

Do loLog.$_getIconID("Notice") Returns lnIconID
Calculate lnExpectedIconID as 1694
Do ioTAP.$is_number(lnIconID,lnExpectedIconID,"We have the right icon ID for notice")

Do loLog.$clearLog()
Do loLog.$getLog() Returns llLog
Calculate llLog.1.TimeStamp as #NULL

Calculate lcMethodLine as con($cmethod().$fullname," line 53")
Calculate lcMethodLine as replaceall(lcMethodLine,"//","")

Do llLogToCompare.$clear()
Do llLogToCompare.$add()
Calculate llLogToCompare.$line as 1
Calculate llLogToCompare.ID as 1
Calculate llLogToCompare.Level as "Notice"
Calculate llLogToCompare.Method as $cmethod()
Calculate llLogToCompare.MethodLine as 53
Calculate llLogToCompare.Location as lcMethodLine
Calculate llLogToCompare.Message as "**Log cleared**"
Calculate llLogToCompare.Color as kColorWindowText
Calculate llLogToCompare.IconID as 1694
Calculate llLogToCompare.ShellColor as loCLI.$kCyan()

Do ioTAP.$is_list(llLog,llLogToCompare,"We cleared the log correctly")