Set reference lirLibrary to pirClass.$lib

Set reference lirClassFolder to lirLibrary.$classes.$findident(pirClass.$parentfolder)
Calculate lcTestFolderName as con(lirClassFolder.$name," Testing")

Do $cinst.$_getFolderInLibrary(lirLibrary,lcTestFolderName) Returns lirTestFolder

Do lirLibrary.$objects.$add(pcTestClassName) Returns lirTestClass
Calculate lirTestClass.$superclass as $cinst.$_getSuperclassForTestClass()
Calculate lirTestClass.$parentfolder as lirTestFolder.$ident
Calculate lirTestClass.$showascheckedout as kTrue
Calculate lirTestClass.$designtaskname as "Startup_Task"
Calculate lirTestClass.$external as kTrue

Switch pirClass.$classtype
	Case kTable
		Do lirTestClass.$ivardefs.$add("irMock",kRow,pirClass().$name) Returns lirMockVariable
	Case kObjectclass
		Do lirTestClass.$ivardefs.$add("iorMock",kObjectref,pirClass().$name) Returns lirMockVariable
	Default
		Do lirTestClass.$ivardefs.$add("iirMock",kItemref) Returns lirMockVariable
End Switch

If pirClass.$classtype=kTable
	Calculate lcMockSetupMethodLine as con("Do $cinst.$mock(",pirClass.$group().$name,".",pirClass.$name,",",lirMockVariable().$name,")")
Else
	Calculate lcMockSetupMethodLine as con("Do $cinst.$mock(",pirClass.$group().$name,".",pirClass.$name,") Returns ",lirMockVariable().$name)
End If

Do lirTestClass.$methods.$add("$setup") Returns lirSetupMethod

Do lirSetupMethod.$methodlines.$add("Do inherited")
Do lirSetupMethod.$methodlines.$add()

Do lirSetupMethod.$methodlines.$add(lcMockSetupMethodLine)

Quit method lirTestClass